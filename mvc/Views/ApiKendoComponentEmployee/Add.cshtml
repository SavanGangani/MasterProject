@model mvc.Models.tblEmployee
@{
    var genders = new List<string> { "Male", "Female", "Other" };
    var shifts = new List<string> { "Morning", "Afternoon" };
}

<!DOCTYPE html>
<html>
<head>
    <title>Add Employee</title>
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.1.119/styles/kendo.default-v2.min.css" />
</head>
<body>
    <div id="example">
        <form id="employeeForm">
            <div class="k-content">
                <label for="c_empname">Name</label>
                <input id="c_empname" name="c_empname" />

                <label for="c_empgender">Gender</label><br>
                @foreach (var gender in genders)
                {
                    <input type="radio" id="@gender" name="c_empgender" value="@gender" />
                    <label for="@gender">@gender</label>
                }
                <br>

                <label for="c_empdob">Date of Birth</label>
                <input id="c_empdob" name="c_empdob" />

                <label for="c_empshift">Shift</label><br>
                @foreach (var shift in shifts)
                {
                    <input type="checkbox" id="@shift" name="c_empshift" value="@shift" />
                    <label for="@shift">@shift</label>
                }<br>

                <label for="c_empimg">Image</label>
                <input type="file" id="c_empimg" name="c_empimg" />
@* 
                <label for="c_empdepartment">Department</label>
                <select id="c_empdepartment" name="c_empdepartment">
                    @if (ViewBag.Departments != null)
                    {
                        foreach (var department in ViewBag.Departments)
                        {
                            <option value="@department">@department</option>
                        }
                    }
                    else
                    {
                        <option value="">No departments available</option>
                    }
                </select><br><br> *@

                <div class="form-group">
            <div>
                <label>Department</label>
                <select class="form-control" id="c_empdepartment" name="c_empdepartment">
                    <option value="">Select Department</option>
                </select>
                <span class="text-danger" id="departmentValidationError"></span>
            </div>
        </div>

                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                <button type="button" class="k-button k-primary" onclick="addEmployee()">Add Employee</button>
            </div>
        </form>
    </div>

@section Scripts {
    <script src="https://kendo.cdn.telerik.com/2022.1.119/js/jquery.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2022.1.119/js/kendo.all.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#c_empname").kendoTextBox();
            $("#c_empdob").kendoDatePicker({
                format: "yyyy-MM-dd" // Example format: "yyyy-MM-dd"
            });
            $("#c_empimg").kendoUpload();
            $("#c_empdepartment").kendoDropDownList();
        });

         $(document).ready(function () {
            // Fetch departments when the page loads
            $.ajax({
                url: 'https://localhost:7044/api/EmployeeApi/api/Department',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (Array.isArray(data)) {
                        var dropdown = $('#c_empdepartment');
                        dropdown.empty().append($('<option value="">Select Department</option>'));
                        data.forEach(function (department) {
                            // Append each department as an option to the dropdown
                            dropdown.append($('<option>').val(department.c_departmentname).text(department.c_departmentname));
                        });
                    } else {
                        console.error('Invalid data format:', data);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching departments:', status, error);
                    $('#departmentValidationError').text('Error fetching departments. Please try again.');
                }
            });
        });

        function addEmployee() {
            var formData = new FormData($('#employeeForm')[0]);
            $.ajax({
                url: 'https://localhost:7044/api/EmployeeApi',
                method: 'POST',
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    alert('Successfully Added Employee!');
                    window.location.href = '/ApiKendoComponentEmployee/Index';
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert('Error adding employee. Please try again.');
                }
            });
        }

        
    </script>
}
</body>
</html>
